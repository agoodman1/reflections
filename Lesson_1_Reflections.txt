How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to only look at the differences in the two versions rather than looking at the entire source code which allowed me to find the differences much more quickly.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It could allow me to see how I arrived at a certain version and allow me to revert back to anything from previous versions that had worked better than the current version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    It enables you to branch new versions at critical points in the development.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git deals with coding in which multiple files are usually all interrelated whereas in Google Docs the files may not be related.

How can you use the commands git log and git diff to view the history of files?

    You can use git log to get all the commits then use git diff to highlight changes between two commits.

How might using version control make you more confident to make changes that
could break something?

    Because you can always revert back to older versions to find where a bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here